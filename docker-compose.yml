version: '3.8'

services:
    db:
        restart: always
        image: "postgres:12.3-alpine"
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_PORT=5432
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        networks:
            - rengine_network
    web:
        restart: always
        image: docker.pkg.github.com/yogeshojha/rengine/rengine:latest
        build: .
        command: gunicorn reNgine.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - .:/app
            - static_volume:/app/staticfiles
            - media_volume:/app/tools/scan_results
        depends_on:
            - db
        networks:
            rengine_network:
                aliases:
                    - rengine
    proxy:
        restart: always
        image: nginx:alpine
        depends_on:
            - web
            - db
        volumes:
            - ./config/nginx/rengine.conf:/etc/nginx/conf.d/default.conf:ro
            - static_volume:/app/staticfiles
            - media_volume:/app/tools/scan_results
        networks:
            - rengine_network
            - traefik-proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.recon.entrypoints=http"
            - "traefik.http.routers.recon.rule=Host(`recon.wleberre.fr`)"
            - "traefik.http.middlewares.recon-https-redirect.redirectscheme.scheme=https"
            - "traefik.http.routers.recon.middlewares=secured@file"
            - "traefik.http.routers.recon-secure.entrypoints=https"
            - "traefik.http.routers.recon-secure.rule=Host(`recon.wleberre.fr`)"
            - "traefik.http.routers.recon-secure.tls=true"
            - "traefik.http.routers.recon-secure.tls.certresolver=http"
            - "traefik.http.routers.recon-secure.service=recon"
            - "traefik.http.services.recon.loadbalancer.server.port=80"
            - "traefik.docker.network=traefik-proxy"

networks:
    rengine_network:
    traefik-proxy:
        external:
            name: traefik-proxy

volumes:
    postgres_data:
    static_volume:
    media_volume:
